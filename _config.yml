# Site
repository: Git repository where your resume will be hosted, only required if you are hosting on GitHub (eg. sproogen/modern-resume-theme)
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

# Personal info
name: 임수빈
title: Backend Engineer / PM
email: tncksrhd@naver.com
# email_title: Email (Email title override)
phone: 010-9073-5635
# phone_title: Phone (Phone title override)
#website: Your website (eg. https://google.com)(optional)
# website_title: Web (Website title override)

# Dark Mode (true/false/never)
darkmode: false

linkedin_username: LimSuBBiin
xing_username: jekyll
pinterest_username: jekyll
youtube_username: jekyll
orcid_username: 0000-0000-0000-0000
googlescholar_username: D847cGsAAAAJ

# Additional icon links
additional_links:
- title: Link name
  icon: Font Awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
  url: Link url (eg. https://google.com)
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: 소 개
about_profile_image: images/ResumeImage_1.jpg
about_content: | # this will include new lines to allow paragraphs
  서경대학교 소프트웨어학과 4년을 재학 후, 배우는 것을 좋아하는 신입 백엔드 개발자입니다.
  고객 중심의 서비스를 지향하며, 데이터 기반 의사결정과 UI/UX 사용성을 함께 고려하는 백엔드 개발자가 되고자 합니다.
  문서화의 힘을 믿고, 항상 살아있는 문서를 관리하기 위해 힘씁니다.
  팀원들과 즐겁게 커뮤니케이션하기를 기대합니다.

content:
  - title: 기술 스택 # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
#        border: weak  # Value of `weak` will display a weak border below this item. # Any
                      # other value (or no value) means no border will be displayed
        title: Backend
#        link: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
#        link_text: Link Text
#        additional_links:
#          - title:  Github page for project (eg. sproogen/modern-resume-theme)
#            icon: fab fa-github
#            url: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
#          - title:  Github page for project (eg. sproogen/modern-resume-theme)
#            icon: fab fa-github
#            url: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
#        quote: >
#          Short overview of the project (optional)
        description: | # this will include new lines to allow paragraphs
          - Java
          - SpringBoot3.x, Spring Security6 
          - JPA
          - Gradle, Maven
          - IntelliJ



      - layout: left
        title: Database
        description: |  
          - MYSQL
          - Oracle
      
    

      - layout: left
        title: Frontend
        description: |
          - JavaScript
          - ReactJS





      - layout: left
        title: 기초 & 활용 경험
        description: |
          - MariaDB
          - Postgresql
          - MSA (Microservice Architecture)
          - AWS  
          <br><br>






  - title: Education
    layout: list
    content:
      - layout: right
        title: 서경대학교 23년도 대학기업 협력형 전문인재 양성 수료
        sub_title: 서경SW아카데미
        caption: 23.10.12 ~ 23.12.22
        link: https://swacademy.skuniv.ac.kr/
        description: | # this will include new lines to allow paragraphs
         - 공공데이터 API를 활용한 테마별 추천 서비스
         - Spring boot,React 기반 공공데이터를 활용한 웹서비스 개발
         - Spring Cloud 모듈을 활용한 MSA(Micro Service Architecture) 개발 with (주)헥토 
         - https://github.com/LimSuBBiin/frontworkspace
         - https://github.com/LimSuBBiin/pj_backworkspace   
          <br><br>




  

  - title: Experience
    layout: list
    content:
      - layout: right
        title : 사회문제 해결을 위한 해커톤(한국정책학회 & 연세대 주최)
        sub_title : 사회 서비스 및 웹서비스 기획 (4인)
        caption: 24.1.15 ~ 24.2.25
        description: |
          대한민국은 수도권 집중화와 더불어 저출산·고령화가 심화되며, 전국 228개 시군구 중 89곳이 인구감소지역으로 지정되었습니다.
          이에 따라 빈집과 폐교의 증가, 지역 활력의 불균형, 지방의 소멸 위기가 현실화되고 있습니다.
          
          본 프로젝트는 이러한 사회문제에 대응하기 위해, **‘학교와 마을은 운명공동체’**라는 관점에서 출발하였습니다.
          학교는 단순한 교육공간이 아닌 지역의 공공재로, 폐교는 곧 마을 공동체 해체의 시작이 될 수 있습니다.
          따라서, 학교와 마을이 함께 살아가는 생태계를 만들기 위한 지역 연계 서비스를 기획했습니다.
          
          “나래(NARE)” – 마을과 학교의 날개를 펴다
  
          “나래”는 ‘날개’라는 의미로, 지역과 교육의 새로운 비상을 상징합니다.
          
          📄[나래 앱 기획안 보기](https://github.com/LimSuBBiin/LimSuBBiin.github.io/raw/master/assets/나래_앱.pdf)
          📄[해커톤 결과 보고서 보기](https://github.com/LimSuBBiin/LimSuBBiin.github.io/raw/master/assets/나래_해커톤.pdf)

      - layout: right
        description: |
          - 핵심 목표
            - 지역 공동체 교육을 기반으로 지역 활성화를 도모
  
            - 지역 맞춤형 특화 교육 콘텐츠를 기획하여 마을의 생존력 강화
  
            - 민(지역주민)·관(지자체)·학(학교) 간의 연결을 지원하는 플랫폼 서비스 구축
  
            - 폐교 공간을 활용한 교육·문화 거점으로의 전환 유도
        
      - layout: right
        description: |
          - 나의 역할 :
            - 사회문제 분석을 바탕으로 서비스 전체 콘셉트 및 방향 설정
  
            - 사용자별 시나리오 기획 및 서비스 흐름도 제작 (Figma, Whimsical 활용)
  
            - 사용자 유형 분류 및 역할 정의
  
            - 핵심 기능별 우선순위 도출 및 MVP 선정

            - 피그마 기반 프로토타입 설계 및 UX Flow 설계 주도
           
           - 느낀점 : 
              - 공공성과 사회문제를 기반으로 한 의미 있는 프로젝트를 기획하며 기획력, 문제 해결 능력, 팀 커뮤니케이션 역량을 강화할 수 있었습니다.
  
              - 기술 중심의 솔루션보다 사용자 중심의 플랫폼 구조 설계를 통해 서비스가 가져야 할 공공성과 지속 가능성을 중점에 두었습니다.
  
              - 앞으로도 사회적 가치와 디지털 기술이 결합된 로컬 기반 서비스 기획자로서, 백엔드 개발자로서의 역량을 더욱 넓혀가고 싶다는 확신을 얻은 프로젝트였습니다.
          -
  - title: Experience(Personal Project)
    layout: list
    content:
      - layout: right
        title: Basket-Zone
        sub_title: 농구 시합 연결 서비스
        caption: 25.3.1 ~ 25.5.11
        link : https://github.com/LimSuBBiin/PBT_PROJECT
        description: | 
          - 기술 스택 : JAVA, SpringBoot, Spring Security, MYSQL, JWT, REST API, ReactJS
          - 성남으로 이사 후, 주변에 같이 농구할 팀이 없어, 농구 팀을 자유롭게 가입하고 남녀노소 차별없이
          경기에 참여할 수 있고, 경기 캘린더를 동기적으로 확인 할 수 있도록 설계한 서비스입니다.
            <br><br><br><br>    

      - layout: right
        description: |          
          - 주요 서비스
            - 회원가입 및 로그인 (JWT 기반 인증 및 권한 관리)
              - 안전한 인증 시스템 구현을 위해 JWT(Json Web Token)를 활용하여 무상태(stateless) 인증 및 권한 관리를 효율적으로 처리했습니다.
            - 마이페이지 및 회원 정보 수정
              - 사용자가 개인정보를 직접 관리할 수 있도록 UI/UX를 고려한 마이페이지를 제공하며, 회원 정보 수정 기능도 함께 구현했습니다.
            - 농구 팀 생성 및 가입 요청, 승인 프로세스 관리
              - 팀 리더가 직접 농구 팀을 생성할 수 있으며, 회원들은 팀 가입 요청을 하고 리더는 이를 승인 또는 거절하는 권한 관리 기능을 구현했습니다.
            - 다중 팀 가입 및 팀별 맞춤 설정 지원
              - 한 사용자가 여러 팀에 가입할 수 있도록 설계하였으며, 각 팀별로 개별적인 설정 및 관리를 할 수 있는 맞춤형 기능을 제공했습니다.
            - 시합 생성 및 포지션 선택 신청 (PG, SG, SF, F, C) — Modal UI 구현
              - 시합 주최자가 시합을 생성하고, 참가자는 포지션을 선택하여 신청할 수 있도록 Modal 창을 통해 직관적인 인터페이스를 구현했습니다.
            - 내가 생성한 시합 및 신청한 시합 조회 기능
              - 사용자는 자신이 직접 생성한 시합과 신청한 시합 내역을 손쉽게 조회할 수 있도록 맞춤형 데이터 필터링 및 SELECT 기능을 구현했습니다.
            - 팀별 시합 일정 캘린더 및 상세 정보 제공
              - 각 팀에서 신청한 시합 일정을 캘린더 형태로 시각화하여 한눈에 일정과 세부 정보를 확인할 수 있도록 UX를 개선했습니다.
            <br><br><br><br>  
          

      - layout: right
        description: |
          - 주요 코드 
          신청한 경기들의 공지사항(Notice)을 불러오는 로직
          ```java
          @Transactional
          public List<NoticeRequestListDto> getMyReqGameNotice(Long memMstIdx){
              List<Long> teamRequestIdxList = teamMemberQueryRepository.findMyTeamForNotice(memMstIdx);
              List<GameRequest> myGameRequests = em.createQuery(
                  "SELECT gr FROM GameRequest gr JOIN FETCH gr.teamMember tm WHERE tm.teamRequestIdx IN (:teamRequestIdxList) AND gr.gameRequestStatus = :gameRequestStatus", 
                  GameRequest.class)
                  .setParameter("teamRequestIdxList", teamRequestIdxList)
                  .setParameter("gameRequestStatus", GameRequestStatus.신청)
                  .getResultList();

              // 각 GameRequest를 NoticeGame과 매핑
              Map<Long, GameRequest> gameRequestMap = myGameRequests.stream()
                  .collect(Collectors.toMap(gr -> gr.getNoticeGame().getNoticeGameIdx(), Function.identity()));
              
         
              // DTO로 변환
              return noticeGames.stream().map(n -> new NoticeRequestListDto(...)).collect(Collectors.toList());
          }
          ```
          - 팀원 정보를 기반으로 사용자가 신청한 경기들의 공지사항을 가져와 포지션별 신청 현황, 팀 정보, 경기 상태 등을 DTO로 변환하는 핵심 로직입니다.
            <br><br><br><br>     
        
          
          
      - layout: right
        description: |
          - ERD
           <img src="/images/ERD.PNG" alt="ERD" width="400"/>
          
          - mem (회원)
            - 농구팀 서비스 이용자의 정보를 저장하는 테이블로, 회원의 기본 정보(아이디, 이름, 연락처 등)를 관리합니다.
            - 팀 가입, 경기 신청 등의 주체가 되는 주요 엔티티입니다.
          
          - team_tbl (팀)
            - 농구 팀의 정보를 담는 테이블로, 팀명, 팀 생성일, 팀장(리더) 정보 등을 포함합니다.
            - 회원들이 소속될 수 있는 팀 단위를 나타냅니다.
          
          - team_member_tbl
            - 회원과 팀 간의 관계를 나타내는 중간 테이블로, 어떤 회원이 어떤 팀에 속하는지를 관리합니다.
            - 팀 가입 요청 상태(승인, 대기 등)와 회원의 역할(리더, 팀원 등)을 함께 저장하여 팀원 관리에 활용됩니다.
          
          - notice_game_tbl
            - 팀 간 시합 공지 및 일정 정보를 저장하는 테이블입니다.
            - 경기 일자, 장소, 주최 팀 등의 시합 기본 정보를 포함하며, 회원들이 확인할 수 있도록 공지 역할을 합니다.
          
          - game_request_tbl
            - 시합에 참여하기 위해 팀원들이 신청하는 정보를 관리하는 테이블로, 어느 회원이 어느 포지션으로 시합에 참여 신청했는지 기록합니다.
            - 시합 참여 인원 관리와 포지션 배정을 위한 핵심 데이터입니다.
            <br><br><br><br>  

      - layout: right
        description: |   
          - 시연 이미지
            ![시연이미지](/images/Home.PNG "Home")  
            <br><br>
        
            ![시연이미지](/images/gameReq.PNG "Home")  
            <br><br>
          
            ![시연이미지](/images/Calendar.PNG "Home")  
      
    
          - 임수빈 - Backend Developer
             포트폴리오 및 프로젝트 시연은 GitHub README 및 시연 영상에서 확인 가능합니다.
              References available upon request.
#  - title: A Little More About Me
#    layout: text
#    content: | # this will include new lines to allow paragraphs
#      This is where you can write a little more about yourself. You could title this section **Interests** and include some of your other interests.
#
#      Or you could title it **Skills** and write a bit more about things that make you more desirable, like *leadership* or *teamwork*

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
# theme: modern-resume-theme (Use this is you are hosting your resume yourself)
# remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
